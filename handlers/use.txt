const WebSocket = require('ws');
const handleNick = require('./handlers/handleNick');
const handleJoin = require('./handlers/handleJoin');
const handleMsg = require('./handlers/handleMsg');

const wss = new WebSocket.Server({ port: 8080 });
const activeRooms = new Map(); // roomName -> Set of ctx

wss.on('connection', (ws) => {
    const ctx = { websocket: ws, nick: null, room: null };

    ws.on('message', (message) => {
        let parsed;
        try {
            parsed = JSON.parse(message);
            console.log("Parsed message:", parsed);
        } catch (error) {
            console.error('Error parsing WebSocket message:', error);
            return;
        }

        switch (parsed.type) {
            case 'NICK':
                handleNick(ctx, parsed);
                break;

            case 'JOIN':
                handleJoin(ctx, parsed, activeRooms);
                break;

            case 'MSG':
                handleMsg(ctx, parsed, activeRooms);
                break;

            case 'LIST':
                ws.send(JSON.stringify({ 
                    type: 'LIST', 
                    rooms: Array.from(activeRooms.keys()) 
                }));
                break;

            case 'QUIT':
                ws.close();
                break;

            default:
                console.warn("Unknown message type:", parsed.type);
        }
    });

    ws.on('close', () => {
        // Ta bort från rum när en klient stänger
        if (ctx.room && activeRooms.has(ctx.room)) {
            activeRooms.get(ctx.room).delete(ctx);
        }
    });
});

kod som behövs i surven för att hantera handlersarna